name: Deploy service with AWS Copilot

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1
    - name: Setup AWS Copilot
      run: |
        curl -Lo copilot-linux https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
        chmod +x copilot-linux
        sudo mv copilot-linux /usr/local/bin/copilot
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.0.1
        bundler-cache: true 
    - name: Assets precompile
      run: |
        bundle exec rails assets:precompile
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile.prod
        build-args: |
          RUBY_VERSION=3.0.1
          BUNDLER_VERSION=2.2.16
        push: false
        load: true
        tags: ${{ github.repository }}:1.0.0
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Check docker images
      run: |
        docker image ls
    - name: Migration
      run: |
        # https://aws.github.io/copilot-cli/docs/commands/task-run/
        copilot task run \
          --command 'bin/rails db:migrate' \
          --app chronos \
          --env dev \
          --image $GITHUB_REPOSITORY:1.0.0
    # - name: Deploy Rails service to test environment
    #   run: |
    #     copilot svc deploy --app chronos --env test --name rails
