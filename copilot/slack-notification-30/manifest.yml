# The manifest for the "slack-notification-30" job.
# Read the full specification for the "Scheduled Job" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/scheduled-job/

# Your job name will be used in naming your resources like log groups, ECS Tasks, etc.
name: slack-notification-30
type: Scheduled Job

# Trigger for your task.
on:
  # The scheduled trigger for your job. You can specify a Unix cron schedule or keyword (@weekly) or a rate (@every 1h30m)
  # AWS Schedule Expressions are also accepted: https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html
  schedule: "30 * * * *"
#retries: 3        # Optional. The number of times to retry the job before failing.
timeout: 2m    # Optional. The timeout after which to stop the job if it's still running. You can use the units (h, m, s).

# Configuration for your container and task.
image:
  location: 353381651656.dkr.ecr.ap-northeast-1.amazonaws.com/chronos/rails:<image_tag>

command: 'bin/rails slack:notification'

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.

logging:
  destination:
    Name: datadog
    Host: http-intake.logs.datadoghq.com
    TLS: 'on'
    dd_service: chronos-rails
    dd_source: ruby
    provider: ecs
  enableMetadata: true
  secretOptions:
    apikey: /copilot/chronos/dev/secrets/DATADOG_API_KEY
  # To parse Rails logs formatted as JSON by Lograge
  # https://github.com/aws-samples/amazon-ecs-firelens-examples/tree/mainline/examples/fluent-bit/parse-json
  configFilePath: /fluent-bit/configs/parse-json.conf

# Optional fields for more advanced use-cases.
#
variables:                    # Pass environment variables as key value pairs.
  RAILS_LOG_TO_STDOUT: true
  DD_SERVICE: chronos-rails
  DD_VERSION: 1.0.0

secrets:
  RAILS_MASTER_KEY: /copilot/chronos/dev/secrets/RAILS_MASTER_KEY

# You can override any of the values defined above by environment.
environments:
  dev:
    variables:
      DD_ENV: dev
